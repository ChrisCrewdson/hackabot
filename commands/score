#!/usr/bin/perl

##HACKABOT_HELP##
# Print scores from something++ and something-- statements
# !score [something | --low | --high]
##HACKABOT_HELP##

use strict;
use DBI;
use Time::localtime;

# specify your database connection parameters here
my $dbhost = 'db0.osuosl.org';
my $dbname = 'manatee-data';
my $dbuser = 'manatee-data';
my $dbpass = 'AvjQAc91hH';

sub get_score {
	my $name = shift;
	my ($dbh, $sth);

	$dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 0 });
	if (!$dbh) {
		die "score: Failed to connect to database\n";
	}
	
	$name = $dbh->quote($name);
	
	$sth = $dbh->prepare("SELECT value FROM score WHERE name = $name");
	$sth->execute;
	my $row = $sth->fetchrow_hashref;
	my $value = $row->{'value'};
	$sth->finish();

	$dbh->disconnect;

	return $value;
}

sub get_top {
	my ($dbh, $sth);

	$dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 1 });
	if (!$dbh) {
		die "score: Failed to connect to database\n";
	}
	
	$sth = $dbh->prepare("SELECT name, value FROM score ORDER BY value DESC LIMIT 3");
	$sth->execute;
	my @list;
	for (my $i = 0; $i < 3; $i++) {
		$list[$i] = $sth->fetchrow_hashref;
	}
	$sth->finish();

	$dbh->disconnect;

	return @list;
}

sub get_low {
	my ($dbh, $sth);

	$dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 1 });
	if (!$dbh) {
		die "score: Failed to connect to database\n";
	}
	
	$sth = $dbh->prepare("SELECT name, value FROM score ORDER BY value ASC LIMIT 3");
	$sth->execute;
	my @list;
	for (my $i = 0; $i < 3; $i++) {
		$list[$i] = $sth->fetchrow_hashref;
	}
	$sth->finish();

	$dbh->disconnect;

	return @list;
}

my $name;
while (<>) {
	if (/^msg\s+(\S+)/) {
		$name = $1;
	}
}

if (defined $name and not $name =~ /(-h|--high|-l|--low)/) {
	my $val = get_score($name);
	if ($val == "") { $val = 0; }
	if ($val == "1") {
		print "send $name has scored $val point!\n";
	}
	else {
		print "send $name has scored $val points!\n";
	}
}
elsif ($name =~ /(-l|--low)/) {
	my @list = get_low();
	print "sendnext\n";
	print "Loosers:\n";
	for (my $i = 0; $i < 3; $i++) {
		print "  $list[$i]->{'value'} $list[$i]->{'name'}\n";
	}
}
elsif ($name =~ /(-h|--high)/) {
	my @list = get_top();
	print "sendnext\n";
	print "Top 3:\n";
	for (my $i = 0; $i < 3; $i++) {
		print "  $list[$i]->{'value'} $list[$i]->{'name'}\n";
	}
}
else {
	my @list = get_top();
	print "sendnext\n";
	print "Top 3:\n";
	for (my $i = 0; $i < 3; $i++) {
		print "  $list[$i]->{'value'} $list[$i]->{'name'}\n";
	}
}
