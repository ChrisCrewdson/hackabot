#!/usr/bin/perl -w

##HACKABOT_HELP##
# Ping a group of people at once!
# !group name [msg] | --add name nick1 [...] | --del name
# !group name --[add|del] nick [...]
##HACKABOT_HELP##

use strict;
use Hackabot::Client;

my $hbc = Hackabot::Client->new;
my $msg = $hbc->readline;
my $nick = $hbc->sent_by;
my $chan = $hbc->channel;

if (not $msg) {
	exit;
}
elsif ($msg =~ /^--add\s+(\S+)\s+(\S.*)/) {
	my $group = $1;
	my $text = $2;
	chomp $text;
	$text =~ s/\s+/,/g; #incase it was space sperated
	$text =~ s/,,/,/g;  #incase it was space and , seperated

	my $ret = add_group($group, $text, $nick, $chan);
	print "send $nick: $ret\n";
	exit;
}
elsif ($msg =~ /^(\S+)\s+--add\s+(\S.*)/) {
	my $group = $1;
	my $text = $2;
	chomp $text;
	$text =~ s/\s+/,/g; #incase it was space sperated
	$text =~ s/,,/,/g;  #incase it was space and , seperated

	my $names = get_group($group);
	if (not defined $names) {
		print "send Sorry, I don't have a record for that group\n";
		exit;
	}

	$text = "$names,$text";
	my $ret = add_group($group, $text, $nick, $chan);
	print "send $nick: $ret\n";
	exit;
}
elsif ($msg =~ /^(\S+)\s+--del\s+(\S.*)/) {
	my $group = $1;
	my $text = $2;
	chomp $text;
	$text =~ s/\s+/,/g; #incase it was space sperated
	$text =~ s/,,/,/g;  #incase it was space and , seperated

	my $names = get_group($group);
	if (not defined $names) {
		print "send Sorry, I don't have a record for that group\n";
		exit;
	}

	foreach my $name (split(/,/,$text)) {
		$names =~ s/,$name$// or 
		$names =~ s/,$name,/,/ or
		$names =~ s/^$name,// or
		$names =~ s/^$name$//;
	}

	my $ret = add_group($group, $names, $nick, $chan);
	print "send $nick: $ret\n";
	exit;
}
elsif ($msg =~ /^--del\s+(\S+)/) {
	my $group = $1;

	my $ret = delete_group($group);
	print "send $nick: $ret\n";
	exit;
}
else {
	$msg =~ /(\S+)\s*(\S*.*)/;
	my $group = $1;
	my $text = $2;
	my $names = get_group($group);

	if (not defined $names) {
		print "send Sorry, I don't have a record for that group\n";
	}
	elsif (defined $text) {
		print "send $names: $text\n";
	}
	else {
		print "send $names\n";
	}
}


sub get_group {
	my $group = shift;

    my $dbh = $hbc->dbi;
	my $sth = $dbh->prepare("SELECT name,names FROM `group` WHERE name = ?");
	$sth->execute($group);
	my $row = $sth->fetchrow_hashref;
	my $value;
	if (defined $row->{'names'}) {
		$value = $row->{'names'};
	}

	return $value;
}

sub add_group {
	my $group = shift;
	my $text = shift;
	my $nick = shift;
	my $chan = shift;

    my $dbh = $hbc->dbi;
	my $ret = "Successfully updated.";
	$dbh->do("INSERT `group` (name, names, nick, chan, date)
       VALUES(?, ?, ?, ?, NOW()) ON DUPLICATE KEY UPDATE
       names = VALUES(names), nick = VALUES(nick),
       chan = VALUES(chan), date = VALUES(date)",
       undef, $group, $text, $nick, $chan)
       or $ret = "I'm a failure! I couldn't add it. :-(";

	return $ret;
}

sub delete_group {
	my $group = shift;

    my $dbh = $hbc->dbi;
	my $ret = "If the group was there it is gone now.";
	$dbh->do("DELETE FROM `group` WHERE name = ?", undef, $group)
        or $ret = "I'm a failure! I couldn't delete it. :-(";

	return $ret;
}
