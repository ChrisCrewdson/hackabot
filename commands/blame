#!/usr/bin/perl -w

##HACKABOT_HELP##
# Blame someone in the channel for the horrible things they did.
# !blame [something bad] | --add something bad
##HACKABOT_HELP##

use strict;
use DBI;
use Time::localtime;
use XML::Simple;

my $CONFIG = XMLin($ENV{'HACKABOT_CFG'});
my $DBCFG = $CONFIG->{'cmdconfig'}->{'database'};

my $dbhost = $DBCFG->{'host'};
my $dbname = $DBCFG->{'name'};
my $dbuser = $DBCFG->{'user'};
my $dbpass = $DBCFG->{'pass'};

my $privmsg = 0;
my ($chan, $msg, $nick);
while (<>) {
	if (/^type\s+privmsg/) {
		$privmsg = 1;
	}
	elsif (/^to\s+(.+)/) {
		$chan = $1;
	}
	elsif (/^nick\s+(.+)/) {
		$nick = $1;
	}
	elsif (/^msg\s+(.*\S+)\s*$/) {
		$msg = $1;
	}
}

if (not defined $nick or not defined $chan) {
	die "blame: not all info was given.\n";
}

if (defined $msg and $msg =~ /^--add\s+(.+)/) {
	my $blame = $1;
	chomp $blame;
	my $ret;
	if ($privmsg) {
		$ret = add_blame($blame, $nick);
	}
	else {
		$ret = add_blame($blame, $nick, $chan);
	}
	print "send $nick: $ret\n";
	exit;
}
#if (defined $msg and $msg =~ /^--list/) {
#	my $ret;
#	if ($privmsg) {
#		$ret = list_blame();
#	}
#	else {
#		$ret = "Please don't flood public channels with --list\n";
#	}
#	print "sendnext\n";
#	print "$nick: All the horrible things I know:\n";
#	print $ret;
#	print "$nick: And that is the end of the list.";
#	exit;
#}

if ($privmsg) {
	print "send I blame you!!!\n";
	exit;
}

if (not defined $msg) {
	$msg = 	get_blame();
}
if (defined $msg and defined $chan) {
	my $names = `echo 'names $chan' | $ENV{'HACKABOT_DIR'}/scripts/client`;
	chomp $names;
	$names =~ s/^\S+\s+\S+\s+//;
	my @list = split(/\s+/, $names);
	my $name = $list[int(rand(@list))];
	print "me blames $name for $msg.\n";
}


sub get_blame {
	my ($dbh, $sth);

	$dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 0 });
	if (!$dbh) {
		die "blame: Failed to connect to database\n";
	}
	
	my $time = `date "+%y%m%d%H%M"`;
	chomp $time;
	$time = $dbh->quote($time);

	$sth = $dbh->prepare("SELECT id,text,lastused FROM blame ORDER BY RAND()*(1/lastused) DESC LIMIT 1");
	$sth->execute;
	my $row = $sth->fetchrow_hashref;
	my $value = $row->{'text'};
	my $id = $row->{'id'};
	$sth->finish();

	$id = $dbh->quote($id);
	$dbh->do("UPDATE blame SET lastused = $time WHERE id = $id") 
		or $value .= " and the inability to update the blame database";

	$dbh->disconnect;

	return $value;
}

sub list_blame {
	my ($dbh, $sth);

	$dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 0 });
	if (!$dbh) {
		die "blame: Failed to connect to database\n";
	}
	
	$sth = $dbh->prepare("SELECT text FROM blame WHERE 1");
	$sth->execute;
	my $row;
	my $value;
	while ($row = $sth->fetchrow_hashref) {
		$value .= $row->{'text'}."\n";
	}
	$sth->finish();

	$dbh->disconnect;

	if (not defined $value) {
		$value = "Nothing found in the db :-/";
	}

	return $value;
}

sub add_blame {
	my $txt = shift;
	my $nick = shift;
	my $chan = shift;

	my $dbh = DBI->connect("DBI:mysql:$dbname:$dbhost", $dbuser, $dbpass, { PrintError => 0 });
	if (!$dbh) {
		print STDERR "blame: Failed to connect to database\n";
		return  "I'm a failure! I couldn't add it. :-(";
	}
	
	my $time = `date "+%F %R"`;
	chomp $time;
	$time = $dbh->quote($time);
	
	$txt = $dbh->quote($txt);
	$nick = $dbh->quote($nick);
	if (defined $chan) {
		$chan = $dbh->quote($chan);
	}
	else {
		$chan = 'NULL';
	}
	
	my $ret = "Successfully added.";
	$dbh->do("INSERT blame SET text = $txt, nick = $nick, chan = $chan, date = $time") or $ret = "I'm a failure! I couldn't add it. :-(";

	$dbh->disconnect;

	return $ret;
}
